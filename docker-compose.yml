services:
  # ------------------------------------------------
  # Chroma Postgres
  # ------------------------------------------------
  cal_chromadb_postgres:
    image: postgres:17.2
    container_name: cal_chromadb_postgres
    environment:
      POSTGRES_USER: "${CHROMA_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${CHROMA_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${CHROMA_POSTGRES_DB}"
    ports:
      - "${CHROMA_POSTGRES_PORT:-5432}:5432"
    volumes:
      - cal_chromadb_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ------------------------------------------------
  # Chroma DB
  # ------------------------------------------------
  cal_chromadb:
    image: chromadb/chroma:latest
    container_name: cal_chromadb
    environment:
      CHROMA_DB_IMPL: "postgresql"
      CHROMA_DB_HOST: "cal_chromadb_postgres"
      CHROMA_DB_PORT: "5432"
      CHROMA_DB_USER: "${CHROMA_POSTGRES_USER}"
      CHROMA_DB_PASSWORD: "${CHROMA_POSTGRES_PASSWORD}"
      CHROMA_DB_DATABASE: "${CHROMA_POSTGRES_DB}"
      CHROMA_DB_MIGRATE_ON_START: "true"
      CHROMA_SERVER_AUTHN_PROVIDER: "chromadb.auth.basic_authn.BasicAuthenticationServerProvider"
      CHROMA_SERVER_AUTHN_CREDENTIALS: "${CHROMA_SERVER_AUTHN_CREDENTIALS}"
    depends_on:
      - cal_chromadb_postgres
    ports:
      - "8000:8000"
    restart: unless-stopped

  # ------------------------------------------------
  # New Postgres for Non-Chroma App Data
  # ------------------------------------------------
  cal_app_postgres:
    image: postgres:17.2
    container_name: cal_app_postgres
    environment:
      POSTGRES_USER: "${APP_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${APP_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${APP_POSTGRES_DB}"
    ports:
      - "${APP_POSTGRES_PORT:-5433}:5432"
    volumes:
      - cal_app_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ------------------------------------------------
  # Elasticsearch
  # ------------------------------------------------
#   cal_elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
#     container_name: cal_elasticsearch
#     environment:
#       - discovery.type=single-node
#       - xpack.security.enabled=true
#       - xpack.security.transport.ssl.enabled=false
#       - xpack.security.http.ssl.enabled=false
#       - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     volumes:
#       - es-data:/usr/share/elasticsearch/data
#     ports:
#       - "9200:9200"
#     networks:
#       - elk

#   # ------------------------------------------------
#   # Kibana
#   # ------------------------------------------------
#   cal_kibana:
#     image: docker.elastic.co/kibana/kibana:8.17.0
#     container_name: cal_kibana
#     environment:
#       - "ELASTICSEARCH_HOSTS=http://cal_elasticsearch:9200"
#       - "ELASTICSEARCH_USERNAME=elastic"
#       - "ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}"
#       - "XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${KIBANA_ENCRYPTION_KEY}"
#     depends_on:
#       - cal_elasticsearch
#     ports:
#       - "5601:5601"
#     networks:
#       - elk

# networks:
#   elk:
#     driver: bridge

volumes:
  # es-data:
  cal_chromadb_postgres_data:
  cal_app_postgres_data:
